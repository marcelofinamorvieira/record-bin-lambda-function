import * as SchemaTypes from '../SchemaTypes';
import * as SimpleSchemaTypes from '../SimpleSchemaTypes';
import BaseResource from '../../BaseResource';
export default class Environment extends BaseResource {
    static readonly TYPE: 'environment';
    /**
     * Fork an existing environment
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/environment/fork
     */
    fork(environmentId: string | SimpleSchemaTypes.EnvironmentData, body: SimpleSchemaTypes.EnvironmentForkSchema): Promise<SimpleSchemaTypes.Environment>;
    /**
     * Fork an existing environment
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/environment/fork
     */
    rawFork(environmentId: string, body: SchemaTypes.EnvironmentForkSchema): Promise<SchemaTypes.EnvironmentForkJobSchema>;
    /**
     * Promote an environment to primary
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/environment/promote
     */
    promote(environmentId: string | SimpleSchemaTypes.EnvironmentData): Promise<SimpleSchemaTypes.Environment>;
    /**
     * Promote an environment to primary
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/environment/promote
     */
    rawPromote(environmentId: string): Promise<SchemaTypes.EnvironmentPromoteTargetSchema>;
    /**
     * List all environments
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/environment/instances
     */
    list(): Promise<SimpleSchemaTypes.EnvironmentInstancesTargetSchema>;
    /**
     * List all environments
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/environment/instances
     */
    rawList(): Promise<SchemaTypes.EnvironmentInstancesTargetSchema>;
    /**
     * Retrieve a environment
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/environment/self
     */
    find(environmentId: string | SimpleSchemaTypes.EnvironmentData): Promise<SimpleSchemaTypes.Environment>;
    /**
     * Retrieve a environment
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/environment/self
     */
    rawFind(environmentId: string): Promise<SchemaTypes.EnvironmentSelfTargetSchema>;
    /**
     * Delete a environment
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/environment/destroy
     */
    destroy(environmentId: string | SimpleSchemaTypes.EnvironmentData): Promise<SimpleSchemaTypes.Environment>;
    /**
     * Delete a environment
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/environment/destroy
     */
    rawDestroy(environmentId: string): Promise<SchemaTypes.EnvironmentDestroyJobSchema>;
}
