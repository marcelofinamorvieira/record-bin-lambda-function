var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as Utils from '@datocms/rest-client-utils';
import BaseResource from '../../BaseResource';
var Plugin = /** @class */ (function (_super) {
    __extends(Plugin, _super);
    function Plugin() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Create a new plugin
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/plugin/create
     */
    Plugin.prototype.create = function (body) {
        return this.rawCreate(Utils.serializeRequestBody(body, {
            type: 'plugin',
            attributes: [
                'package_name',
                'name',
                'description',
                'url',
                'permissions',
                'plugin_type',
                'field_types',
                'parameter_definitions',
                'package_version',
            ],
            relationships: [],
        })).then(function (body) {
            return Utils.deserializeResponseBody(body);
        });
    };
    /**
     * Create a new plugin
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/plugin/create
     */
    Plugin.prototype.rawCreate = function (body) {
        return this.client.request({
            method: 'POST',
            url: "/plugins",
            body: body,
        });
    };
    /**
     * Update a plugin
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/plugin/update
     */
    Plugin.prototype.update = function (pluginId, body) {
        return this.rawUpdate(Utils.toId(pluginId), Utils.serializeRequestBody(body, {
            id: Utils.toId(pluginId),
            type: 'plugin',
            attributes: [
                'name',
                'description',
                'url',
                'parameters',
                'package_version',
                'permissions',
            ],
            relationships: [],
        })).then(function (body) {
            return Utils.deserializeResponseBody(body);
        });
    };
    /**
     * Update a plugin
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/plugin/update
     */
    Plugin.prototype.rawUpdate = function (pluginId, body) {
        return this.client.request({
            method: 'PUT',
            url: "/plugins/".concat(pluginId),
            body: body,
        });
    };
    /**
     * List all plugins
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/plugin/instances
     */
    Plugin.prototype.list = function () {
        return this.rawList().then(function (body) {
            return Utils.deserializeResponseBody(body);
        });
    };
    /**
     * List all plugins
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/plugin/instances
     */
    Plugin.prototype.rawList = function () {
        return this.client.request({
            method: 'GET',
            url: "/plugins",
        });
    };
    /**
     * Retrieve a plugins
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/plugin/self
     */
    Plugin.prototype.find = function (pluginId) {
        return this.rawFind(Utils.toId(pluginId)).then(function (body) {
            return Utils.deserializeResponseBody(body);
        });
    };
    /**
     * Retrieve a plugins
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/plugin/self
     */
    Plugin.prototype.rawFind = function (pluginId) {
        return this.client.request({
            method: 'GET',
            url: "/plugins/".concat(pluginId),
        });
    };
    /**
     * Delete a plugin
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/plugin/destroy
     */
    Plugin.prototype.destroy = function (pluginId) {
        return this.rawDestroy(Utils.toId(pluginId)).then(function (body) {
            return Utils.deserializeResponseBody(body);
        });
    };
    /**
     * Delete a plugin
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/plugin/destroy
     */
    Plugin.prototype.rawDestroy = function (pluginId) {
        return this.client.request({
            method: 'DELETE',
            url: "/plugins/".concat(pluginId),
        });
    };
    /**
     * Retrieve all fields using the plugin
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/plugin/fields
     */
    Plugin.prototype.fields = function (pluginId) {
        return this.rawFields(Utils.toId(pluginId)).then(function (body) {
            return Utils.deserializeResponseBody(body);
        });
    };
    /**
     * Retrieve all fields using the plugin
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/plugin/fields
     */
    Plugin.prototype.rawFields = function (pluginId) {
        return this.client.request({
            method: 'GET',
            url: "/plugins/".concat(pluginId, "/fields"),
        });
    };
    Plugin.TYPE = 'plugin';
    return Plugin;
}(BaseResource));
export default Plugin;
//# sourceMappingURL=Plugin.js.map