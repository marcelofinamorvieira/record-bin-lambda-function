var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as Utils from '@datocms/rest-client-utils';
import BaseResource from '../../BaseResource';
var SiteInvitation = /** @class */ (function (_super) {
    __extends(SiteInvitation, _super);
    function SiteInvitation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Invite a new user
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/site-invitation/create
     */
    SiteInvitation.prototype.create = function (body) {
        return this.rawCreate(Utils.serializeRequestBody(body, {
            type: 'site_invitation',
            attributes: ['email'],
            relationships: ['role'],
        })).then(function (body) {
            return Utils.deserializeResponseBody(body);
        });
    };
    /**
     * Invite a new user
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/site-invitation/create
     */
    SiteInvitation.prototype.rawCreate = function (body) {
        return this.client.request({
            method: 'POST',
            url: "/site-invitations",
            body: body,
        });
    };
    /**
     * Update an invitation
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/site-invitation/update
     */
    SiteInvitation.prototype.update = function (siteInvitationId, body) {
        return this.rawUpdate(Utils.toId(siteInvitationId), Utils.serializeRequestBody(body, {
            id: Utils.toId(siteInvitationId),
            type: 'site_invitation',
            attributes: [],
            relationships: ['role'],
        })).then(function (body) {
            return Utils.deserializeResponseBody(body);
        });
    };
    /**
     * Update an invitation
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/site-invitation/update
     */
    SiteInvitation.prototype.rawUpdate = function (siteInvitationId, body) {
        return this.client.request({
            method: 'PUT',
            url: "/site-invitations/".concat(siteInvitationId),
            body: body,
        });
    };
    /**
     * List all invitations
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/site-invitation/instances
     */
    SiteInvitation.prototype.list = function () {
        return this.rawList().then(function (body) {
            return Utils.deserializeResponseBody(body);
        });
    };
    /**
     * List all invitations
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/site-invitation/instances
     */
    SiteInvitation.prototype.rawList = function () {
        return this.client.request({
            method: 'GET',
            url: "/site-invitations",
        });
    };
    /**
     * Retrieve an invitation
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/site-invitation/self
     */
    SiteInvitation.prototype.find = function (siteInvitationId) {
        return this.rawFind(Utils.toId(siteInvitationId)).then(function (body) {
            return Utils.deserializeResponseBody(body);
        });
    };
    /**
     * Retrieve an invitation
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/site-invitation/self
     */
    SiteInvitation.prototype.rawFind = function (siteInvitationId) {
        return this.client.request({
            method: 'GET',
            url: "/site-invitations/".concat(siteInvitationId),
        });
    };
    /**
     * Delete an invitation
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/site-invitation/destroy
     */
    SiteInvitation.prototype.destroy = function (siteInvitationId) {
        return this.rawDestroy(Utils.toId(siteInvitationId)).then(function (body) {
            return Utils.deserializeResponseBody(body);
        });
    };
    /**
     * Delete an invitation
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/site-invitation/destroy
     */
    SiteInvitation.prototype.rawDestroy = function (siteInvitationId) {
        return this.client.request({
            method: 'DELETE',
            url: "/site-invitations/".concat(siteInvitationId),
        });
    };
    /**
     * Resend an invitation
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/site-invitation/resend
     */
    SiteInvitation.prototype.resend = function (siteInvitationId) {
        return this.rawResend(Utils.toId(siteInvitationId));
    };
    /**
     * Resend an invitation
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/site-invitation/resend
     */
    SiteInvitation.prototype.rawResend = function (siteInvitationId) {
        return this.client.request({
            method: 'POST',
            url: "/site-invitations/".concat(siteInvitationId, "/resend"),
        });
    };
    SiteInvitation.TYPE = 'site_invitation';
    return SiteInvitation;
}(BaseResource));
export default SiteInvitation;
//# sourceMappingURL=SiteInvitation.js.map