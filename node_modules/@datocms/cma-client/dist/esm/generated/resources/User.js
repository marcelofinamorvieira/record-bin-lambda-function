var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as Utils from '@datocms/rest-client-utils';
import BaseResource from '../../BaseResource';
var User = /** @class */ (function (_super) {
    __extends(User, _super);
    function User() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Update a collaborator
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/user/update
     */
    User.prototype.update = function (userId, body) {
        return this.rawUpdate(Utils.toId(userId), Utils.serializeRequestBody(body, {
            id: Utils.toId(userId),
            type: 'user',
            attributes: ['is_active'],
            relationships: ['role'],
        })).then(function (body) {
            return Utils.deserializeResponseBody(body);
        });
    };
    /**
     * Update a collaborator
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/user/update
     */
    User.prototype.rawUpdate = function (userId, body) {
        return this.client.request({
            method: 'PUT',
            url: "/users/".concat(userId),
            body: body,
        });
    };
    /**
     * List all collaborators
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/user/instances
     */
    User.prototype.list = function () {
        return this.rawList().then(function (body) {
            return Utils.deserializeResponseBody(body);
        });
    };
    /**
     * List all collaborators
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/user/instances
     */
    User.prototype.rawList = function () {
        return this.client.request({
            method: 'GET',
            url: "/users",
        });
    };
    /**
     * Retrieve a collaborator
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/user/self
     */
    User.prototype.find = function (userId, queryParams) {
        return this.rawFind(Utils.toId(userId), queryParams).then(function (body) {
            return Utils.deserializeResponseBody(body);
        });
    };
    /**
     * Retrieve a collaborator
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/user/self
     */
    User.prototype.rawFind = function (userId, queryParams) {
        return this.client.request({
            method: 'GET',
            url: "/users/".concat(userId),
            queryParams: queryParams,
        });
    };
    /**
     * Retrieve current signed-in user
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/user/me
     */
    User.prototype.findMe = function (queryParams) {
        return this.rawFindMe(queryParams).then(function (body) {
            return Utils.deserializeResponseBody(body);
        });
    };
    /**
     * Retrieve current signed-in user
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/user/me
     */
    User.prototype.rawFindMe = function (queryParams) {
        return this.client.request({
            method: 'GET',
            url: "/users/me",
            queryParams: queryParams,
        });
    };
    /**
     * Delete a collaborator
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/user/destroy
     */
    User.prototype.destroy = function (userId, queryParams) {
        return this.rawDestroy(Utils.toId(userId), queryParams).then(function (body) {
            return Utils.deserializeResponseBody(body);
        });
    };
    /**
     * Delete a collaborator
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/user/destroy
     */
    User.prototype.rawDestroy = function (userId, queryParams) {
        return this.client.request({
            method: 'DELETE',
            url: "/users/".concat(userId),
            queryParams: queryParams,
        });
    };
    User.TYPE = 'user';
    return User;
}(BaseResource));
export default User;
//# sourceMappingURL=User.js.map