import * as SchemaTypes from '../SchemaTypes';
import * as SimpleSchemaTypes from '../SimpleSchemaTypes';
import BaseResource from '../../BaseResource';
export default class User extends BaseResource {
    static readonly TYPE: 'user';
    /**
     * Update a collaborator
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/user/update
     */
    update(userId: string | SimpleSchemaTypes.UserData, body: SimpleSchemaTypes.UserUpdateSchema): Promise<SimpleSchemaTypes.User>;
    /**
     * Update a collaborator
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/user/update
     */
    rawUpdate(userId: string, body: SchemaTypes.UserUpdateSchema): Promise<SchemaTypes.UserUpdateTargetSchema>;
    /**
     * List all collaborators
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/user/instances
     */
    list(): Promise<SimpleSchemaTypes.UserInstancesTargetSchema>;
    /**
     * List all collaborators
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/user/instances
     */
    rawList(): Promise<SchemaTypes.UserInstancesTargetSchema>;
    /**
     * Retrieve a collaborator
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/user/self
     */
    find(userId: string | SimpleSchemaTypes.UserData, queryParams?: SimpleSchemaTypes.UserSelfHrefSchema): Promise<SimpleSchemaTypes.User>;
    /**
     * Retrieve a collaborator
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/user/self
     */
    rawFind(userId: string, queryParams?: SchemaTypes.UserSelfHrefSchema): Promise<SchemaTypes.UserSelfTargetSchema>;
    /**
     * Retrieve current signed-in user
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/user/me
     */
    findMe(queryParams?: SimpleSchemaTypes.UserMeHrefSchema): Promise<SimpleSchemaTypes.User | SimpleSchemaTypes.SsoUser | SimpleSchemaTypes.AccessToken | SimpleSchemaTypes.Account>;
    /**
     * Retrieve current signed-in user
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/user/me
     */
    rawFindMe(queryParams?: SchemaTypes.UserMeHrefSchema): Promise<SchemaTypes.UserMeTargetSchema>;
    /**
     * Delete a collaborator
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/user/destroy
     */
    destroy(userId: string | SimpleSchemaTypes.UserData, queryParams?: SimpleSchemaTypes.UserDestroyHrefSchema): Promise<SimpleSchemaTypes.User>;
    /**
     * Delete a collaborator
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/user/destroy
     */
    rawDestroy(userId: string, queryParams?: SchemaTypes.UserDestroyHrefSchema): Promise<SchemaTypes.UserDestroyTargetSchema>;
}
