import * as Utils from '@datocms/rest-client-utils';
import * as SchemaTypes from '../SchemaTypes';
import * as SimpleSchemaTypes from '../SimpleSchemaTypes';
import BaseResource from '../../BaseResource';
export default class SearchResult extends BaseResource {
    static readonly TYPE: 'search_result';
    /**
     * Search for results
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/search-result/instances
     */
    list(queryParams: SimpleSchemaTypes.SearchResultInstancesHrefSchema): Promise<SimpleSchemaTypes.SearchResultInstancesTargetSchema>;
    /**
     * Search for results
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/search-result/instances
     */
    rawList(queryParams: SchemaTypes.SearchResultInstancesHrefSchema): Promise<SchemaTypes.SearchResultInstancesTargetSchema>;
    /**
     * Async iterator to auto-paginate over elements returned by list()
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/search-result/instances
     */
    listPagedIterator(queryParams: SimpleSchemaTypes.SearchResultInstancesHrefSchema, iteratorOptions?: Utils.IteratorOptions): AsyncGenerator<SimpleSchemaTypes.SearchResult, void, unknown>;
    /**
     * Async iterator to auto-paginate over elements returned by rawList()
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/search-result/instances
     */
    rawListPagedIterator(queryParams: SchemaTypes.SearchResultInstancesHrefSchema, iteratorOptions?: Utils.IteratorOptions): AsyncGenerator<SchemaTypes.SearchResult, void, unknown>;
}
