import * as SchemaTypes from '../SchemaTypes';
import * as SimpleSchemaTypes from '../SimpleSchemaTypes';
import BaseResource from '../../BaseResource';
export default class UploadFilter extends BaseResource {
    static readonly TYPE: 'upload_filter';
    /**
     * Create a new filter
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/upload-filter/create
     */
    create(body: SimpleSchemaTypes.UploadFilterCreateSchema): Promise<SimpleSchemaTypes.UploadFilter>;
    /**
     * Create a new filter
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/upload-filter/create
     */
    rawCreate(body: SchemaTypes.UploadFilterCreateSchema): Promise<SchemaTypes.UploadFilterCreateTargetSchema>;
    /**
     * Update a filter
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/upload-filter/update
     */
    update(uploadFilterId: string | SimpleSchemaTypes.UploadFilterData, body: SimpleSchemaTypes.UploadFilterUpdateSchema): Promise<SimpleSchemaTypes.UploadFilter>;
    /**
     * Update a filter
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/upload-filter/update
     */
    rawUpdate(uploadFilterId: string, body: SchemaTypes.UploadFilterUpdateSchema): Promise<SchemaTypes.UploadFilterUpdateTargetSchema>;
    /**
     * List all filters
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/upload-filter/instances
     */
    list(): Promise<SimpleSchemaTypes.UploadFilterInstancesTargetSchema>;
    /**
     * List all filters
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/upload-filter/instances
     */
    rawList(): Promise<SchemaTypes.UploadFilterInstancesTargetSchema>;
    /**
     * Retrieve a filter
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/upload-filter/self
     */
    find(uploadFilterId: string | SimpleSchemaTypes.UploadFilterData): Promise<SimpleSchemaTypes.UploadFilter>;
    /**
     * Retrieve a filter
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/upload-filter/self
     */
    rawFind(uploadFilterId: string): Promise<SchemaTypes.UploadFilterSelfTargetSchema>;
    /**
     * Delete a filter
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/upload-filter/destroy
     */
    destroy(uploadFilterId: string | SimpleSchemaTypes.UploadFilterData): Promise<SimpleSchemaTypes.UploadFilter>;
    /**
     * Delete a filter
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/upload-filter/destroy
     */
    rawDestroy(uploadFilterId: string): Promise<SchemaTypes.UploadFilterDestroyTargetSchema>;
}
