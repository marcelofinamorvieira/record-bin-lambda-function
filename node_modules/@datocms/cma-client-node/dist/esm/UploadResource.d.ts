import { Resources, SimpleSchemaTypes } from '@datocms/cma-client';
import { OnProgressInfo } from './utils/uploadLocalFileAndReturnPath';
import { CancelablePromise } from '@datocms/rest-client-utils';
export declare type OnProgressCreatingUploadObjectInfo = {
    type: 'CREATING_UPLOAD_OBJECT';
};
export declare type OnUploadProgressInfo = OnProgressInfo | OnProgressCreatingUploadObjectInfo;
export declare type CreateUploadFromLocalFileSchema = Omit<SimpleSchemaTypes.UploadCreateSchema, 'path'> & {
    localPath: string;
    filename?: string;
    skipCreationIfAlreadyExists?: boolean;
    onProgress?: (info: OnUploadProgressInfo) => void;
};
export declare type CreateUploadFromUrlSchema = Omit<SimpleSchemaTypes.UploadCreateSchema, 'path'> & {
    url: string;
    filename?: string;
    skipCreationIfAlreadyExists?: boolean;
    onProgress?: (info: OnUploadProgressInfo) => void;
};
export declare class UploadResource extends Resources.Upload {
    /**
     * Create a new upload from a local file path
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/upload/create
     */
    createFromLocalFile(body: CreateUploadFromLocalFileSchema): CancelablePromise<SimpleSchemaTypes.Upload>;
    /**
     * Create a new upload from a remote URL
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/upload/create
     */
    createFromUrl(body: CreateUploadFromUrlSchema): CancelablePromise<SimpleSchemaTypes.Upload>;
}
